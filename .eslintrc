{
  "extends": [
    "react-app",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": [
    "react"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parserOptions": {
    "ecmaFeatures": {
      "legacyDecorators": true
    }
  },
  "rules": {
    "semi": [
      "error",
      "never"
    ],
    "indent": [
      "error",
      2,
      {
        "FunctionDeclaration": {
          "parameters": "off"
        },
        "FunctionExpression": {
          "parameters": "off"
        },
        "MemberExpression": "off",
        "SwitchCase": 1
      }
    ],
    "comma-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "quotes": [
      "warn",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": false
      }
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "array-bracket-spacing": [
      "error"
    ],
    "radix": "off",
    "no-useless-escape": "off",
    "default-case": "off",
    "import/first": "off",
    "no-extend-native": "off",
    "curly": "warn",
    "react/react-in-jsx-scope": "off",
    "react/jsx-tag-spacing": [
      "error"
    ],
    "react/jsx-curly-spacing": [
      "error",
      {
        "when": "never",
        "children": true
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error"
    ],
    "react/jsx-boolean-value": [
      "error",
      "never"
    ],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "parens-new-line"
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    "@typescript-eslint/no-namespace": ["error", { "allowDeclarations": true }]
  },
  "env": {
    "jquery": true
  }
}